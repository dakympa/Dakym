# -*- coding: utf-8 -*-
"""Untitled10.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Z2LDMPKER-s3bmn8Y4R4olQA6kfn6oXJ
"""

readme_content = """
# Point of Sale (POS) System

**Authors:** Dakym Palmer
**Date Created:** 29/3/2025
**Course:** ITT103
**GitHub Public URL to Code:** [Replace with your GitHub repository URL]

## Purpose

This Python program simulates a Point of Sale (POS) system for a small retail store, "Best Buy Retail Store." It allows cashiers to process customer purchases by adding items to a shopping cart, removing items, calculating the total bill (including tax and discounts), accepting payment, and generating a receipt. The system is designed to improve efficiency and reduce manual errors in the sales process.

## How to Run the Program

1.  **Prerequisites:** Ensure you have Python 3.x installed on your computer.
2.  **Download the Code:** Download the `pos_system.py` file from the GitHub repository linked above.
3.  **Open a Terminal or Command Prompt:** Navigate to the directory where you saved the `pos_system.py` file.
4.  **Run the Program:** Execute the following command: `python pos_system.py`
5.  **Follow the Menu:** The program will display a menu with options for adding items, removing items, viewing the cart, checking out, and exiting. Follow the on-screen instructions to interact with the system.

## Required Modifications

* **Product Catalog:** The product catalog is defined as a dictionary within the `get_product_catalog()` function. You can modify this dictionary to add, remove, or change the products, their prices, and initial stock quantities.
* **Tax Rate:** The sales tax rate is currently set to 10% (0.10). You can change this value in the `checkout()` function.
* **Discount Threshold and Rate:** The discount is applied if the total bill exceeds $5000, and the discount rate is 5%. These values can be modified within the `checkout()` function.
* **Store Name:** the store name is set to "Best Buy Retail Store" in the `generate_receipt` function. This can be easily changed to any desired store name.

## Assumptions and Limitations

* **Input Validation:** The program includes basic input validation to prevent incorrect inputs (e.g., non-numeric quantities). However, it may not handle all possible edge cases.
* **Stock Management:** The program manages stock levels, but it does not persist stock data across multiple program runs. Once the program is closed, the stock levels are reset to the initial values.
* **Currency:** The program assumes all prices and payments are in a single currency (e.g., dollars).
* **Simple Discount:** The discount system is a simple percentage-based discount applied to the total bill. More complex discount rules (e.g., item-specific discounts, quantity-based discounts) are not implemented.
* **No Database:** The program does not use a database to store product or transaction data. It relies on in-memory data structures (dictionaries and lists). Therefore, all data is lost once the program terminates.
* **No User Authentication:** There is no user authentication or authorization. Any user running the program has access to all functionalities.
* **Error Handling:** While some error handling is implemented, more robust error handling could be added for production use.
* **Basic Receipt:** The receipt formatting is basic and intended for display in the console. More advanced receipt printing or formatting is not included.
"""

with open("README.md", "w") as f:
    f.write(readme_content)

print("README.md file created!")